var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.usePollOptionVotesPagination = void 0;
var _regenerator = _interopRequireDefault(require("@babel/runtime/regenerator"));
var _toConsumableArray2 = _interopRequireDefault(require("@babel/runtime/helpers/toConsumableArray"));
var _asyncToGenerator2 = _interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator"));
var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));
var _react = require("react");
var _uniqBy = _interopRequireDefault(require("lodash/uniqBy"));
var _streamChat = require("stream-chat");
var _contexts = require("../../../contexts");
var usePollOptionVotesPagination = function usePollOptionVotesPagination(_ref) {
  var _ref$loadFirstPage = _ref.loadFirstPage,
    loadFirstPage = _ref$loadFirstPage === void 0 ? true : _ref$loadFirstPage,
    option = _ref.option,
    paginationParams = _ref.paginationParams;
  var _usePollContext = (0, _contexts.usePollContext)(),
    poll = _usePollContext.poll;
  var _useChatContext = (0, _contexts.useChatContext)(),
    client = _useChatContext.client;
  var _useState = (0, _react.useState)([]),
    _useState2 = (0, _slicedToArray2["default"])(_useState, 2),
    votes = _useState2[0],
    setVotes = _useState2[1];
  var _useState3 = (0, _react.useState)(false),
    _useState4 = (0, _slicedToArray2["default"])(_useState3, 2),
    loading = _useState4[0],
    setLoading = _useState4[1];
  var _useState5 = (0, _react.useState)(),
    _useState6 = (0, _slicedToArray2["default"])(_useState5, 2),
    error = _useState6[0],
    setError = _useState6[1];
  var cursorRef = (0, _react.useRef)();
  var queryInProgress = (0, _react.useRef)(false);
  var optionFilter = (0, _react.useMemo)(function () {
    return {
      option_id: option.id
    };
  }, [option.id]);
  var loadMore = (0, _react.useCallback)((0, _asyncToGenerator2["default"])(_regenerator["default"].mark(function _callee() {
    var next, _yield$poll$queryOpti, newNext, _votes;
    return _regenerator["default"].wrap(function _callee$(_context) {
      while (1) switch (_context.prev = _context.next) {
        case 0:
          if (!(cursorRef.current === null || queryInProgress.current)) {
            _context.next = 2;
            break;
          }
          return _context.abrupt("return");
        case 2:
          next = cursorRef.current;
          setLoading(true);
          queryInProgress.current = true;
          _context.prev = 5;
          _context.next = 8;
          return poll.queryOptionVotes({
            filter: Object.assign({}, optionFilter, paginationParams == null ? void 0 : paginationParams.filter),
            options: !next ? paginationParams == null ? void 0 : paginationParams.options : Object.assign({}, paginationParams == null ? void 0 : paginationParams.options, {
              next: next
            }),
            sort: Object.assign({
              created_at: -1
            }, paginationParams == null ? void 0 : paginationParams.sort)
          });
        case 8:
          _yield$poll$queryOpti = _context.sent;
          newNext = _yield$poll$queryOpti.next;
          _votes = _yield$poll$queryOpti.votes;
          cursorRef.current = newNext || null;
          setVotes(function (prev) {
            return (0, _uniqBy["default"])([].concat((0, _toConsumableArray2["default"])(prev), (0, _toConsumableArray2["default"])(_votes)), 'id');
          });
          _context.next = 18;
          break;
        case 15:
          _context.prev = 15;
          _context.t0 = _context["catch"](5);
          setError(_context.t0);
        case 18:
          queryInProgress.current = false;
          setLoading(false);
        case 20:
        case "end":
          return _context.stop();
      }
    }, _callee, null, [[5, 15]]);
  })), [optionFilter, paginationParams, poll]);
  (0, _react.useEffect)(function () {
    if (!loadFirstPage || votes.length) return;
    loadMore();
  }, [loadFirstPage, loadMore, votes]);
  (0, _react.useEffect)(function () {
    var castedListeners = ['poll.vote_casted', 'poll.vote_changed'].map(function (eventName) {
      return client.on(eventName, function (event) {
        var _event$poll;
        if ((_event$poll = event.poll) != null && _event$poll.id && event.poll.id !== poll.id) return;
        var vote = event.poll_vote;
        if (vote && !(0, _streamChat.isVoteAnswer)(vote)) {
          if (vote.option_id === option.id) {
            setVotes([vote].concat((0, _toConsumableArray2["default"])(votes.filter(function (v) {
              return v.id !== vote.id;
            }))));
          } else if (eventName === 'poll.vote_changed') {
            setVotes(votes.filter(function (v) {
              return v.id !== vote.id;
            }));
          }
        }
      });
    });
    var removedListener = client.on('poll.vote_removed', function (event) {
      var _event$poll2;
      if ((_event$poll2 = event.poll) != null && _event$poll2.id && event.poll.id !== poll.id) return;
      var vote = event.poll_vote;
      if (vote && !(0, _streamChat.isVoteAnswer)(vote) && vote.option_id === option.id) {
        setVotes(votes.filter(function (v) {
          return v.id !== vote.id;
        }));
      }
    });
    return function () {
      castedListeners.forEach(function (listener) {
        return listener.unsubscribe();
      });
      removedListener.unsubscribe();
    };
  }, [client, option, poll, votes]);
  return {
    error: error,
    hasNextPage: cursorRef.current !== null,
    loading: loading,
    loadMore: loadMore,
    next: cursorRef.current,
    votes: votes
  };
};
exports.usePollOptionVotesPagination = usePollOptionVotesPagination;
//# sourceMappingURL=usePollOptionVotesPagination.js.map