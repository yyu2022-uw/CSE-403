import type { InputMessageInputContextValue } from '../../../contexts/messageInputContext/MessageInputContext';
import type { DefaultStreamChatGenerics } from '../../../types/types';
export declare const useCreateInputMessageInputContext: <StreamChatGenerics extends DefaultStreamChatGenerics = DefaultStreamChatGenerics>({ additionalTextInputProps, asyncMessagesLockDistance, asyncMessagesMinimumPressDuration, asyncMessagesMultiSendEnabled, asyncMessagesSlideToCancelDistance, AttachButton, AudioAttachmentUploadPreview, AudioRecorder, audioRecordingEnabled, AudioRecordingInProgress, AudioRecordingLockIndicator, AudioRecordingPreview, AudioRecordingWaveform, autoCompleteSuggestionsLimit, autoCompleteTriggerSettings, channelId, clearEditingState, clearQuotedMessageState, CommandsButton, compressImageQuality, CooldownTimer, CreatePollContent, doDocUploadRequest, doImageUploadRequest, editing, editMessage, emojiSearchIndex, FileUploadPreview, handleAttachButtonPress, hasCameraPicker, hasCommands, hasFilePicker, hasImagePicker, ImageUploadPreview, initialValue, Input, InputButtons, InputEditingStateHeader, InputGiphySearch, InputReplyStateHeader, maxMessageLength, maxNumberOfFiles, mentionAllAppUsersEnabled, mentionAllAppUsersQuery, MoreOptionsButton, numberOfLines, onChangeText, openPollCreationDialog, quotedMessage, SendButton, sendImageAsync, sendMessage, SendMessageDisallowedIndicator, setInputRef, setQuotedMessageState, showPollCreationDialog, ShowThreadMessageInChannelButton, StartAudioRecordingButton, UploadProgressIndicator, }: InputMessageInputContextValue<StreamChatGenerics> & {
    /**
     * To ensure we allow re-render, when channel is changed
     */
    channelId?: string | undefined;
}) => InputMessageInputContextValue<StreamChatGenerics>;
//# sourceMappingURL=useCreateInputMessageInputContext.d.ts.map